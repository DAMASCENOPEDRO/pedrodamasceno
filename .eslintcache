[{"/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/index.js":"1","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/App.js":"2","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/reportWebVitals.js":"3","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Pages/Home/Home.jsx":"4","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Pages/About/About.jsx":"5","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Pages/SingleProject/SingleProject.jsx":"6","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/NavItem/NavItem.jsx":"7","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/Project/Project.jsx":"8","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/AboutContent/AboutContent.jsx":"9","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/MobileNavItem/MobileNavItem.jsx":"10","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/MobileProject/MobileProject.jsx":"11","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/Header/Header.jsx":"12","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/AboutLeftNav/AboutLeftNav.jsx":"13","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/ProjectPageHeader/ProjectPageHeader.jsx":"14","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/ImageCarousel/ImageCarousel.jsx":"15"},{"size":583,"mtime":1615611716000,"results":"16","hashOfConfig":"17"},{"size":527,"mtime":1615611716000,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1615611716000,"results":"19","hashOfConfig":"17"},{"size":4347,"mtime":1615611718000,"results":"20","hashOfConfig":"17"},{"size":3262,"mtime":1615611718000,"results":"21","hashOfConfig":"17"},{"size":1777,"mtime":1615611718000,"results":"22","hashOfConfig":"17"},{"size":1670,"mtime":1615611718000,"results":"23","hashOfConfig":"17"},{"size":2393,"mtime":1615611718000,"results":"24","hashOfConfig":"17"},{"size":688,"mtime":1615611716000,"results":"25","hashOfConfig":"17"},{"size":1454,"mtime":1615611716000,"results":"26","hashOfConfig":"17"},{"size":2220,"mtime":1615611718000,"results":"27","hashOfConfig":"17"},{"size":2445,"mtime":1615611716000,"results":"28","hashOfConfig":"17"},{"size":1320,"mtime":1615611716000,"results":"29","hashOfConfig":"17"},{"size":771,"mtime":1615611718000,"results":"30","hashOfConfig":"17"},{"size":1180,"mtime":1615611716000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1uixqgq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/index.js",[],["72","73"],"/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/App.js",[],"/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/reportWebVitals.js",[],"/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Pages/Home/Home.jsx",["74"],"import React, { useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport Header from \"../../Components/Header/Header\";\nimport NavItem from \"../../Components/NavItem/NavItem\";\nimport Project from \"../../Components/Project/Project\";\n\nimport Prismic from '@prismicio/client'\nimport MobileNavItem from \"../../Components/MobileNavItem/MobileNavItem\";\nimport react from \"react\";\n\nconst apiEndpoint = 'https://portfolio-pedro.cdn.prismic.io/api/v2'\nconst accessToken = 'MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ'\nconst client = Prismic.client(apiEndpoint, { accessToken });\n\nfunction Home(props) {\n\tconst [currentUrl, setcurrentUrl] = useState('/')\n\tconst [contactIGLink, setcontactIGLink] = useState(null);\n\n\tuseEffect(() => {\n\t\twindow.matchMedia(\"(min-width:850px)\")\n\t\twindow.addEventListener(\"scroll\", listenScrollEvent);\n\n\t\treturn () => {\n\t\t\t// cleanup\n\t\t}\n\t}, [])\n\tuseEffect(() => {\n\t\twindow.matchMedia(\"(min-width:850px)\");\n\t\tlistenScrollEvent();\n\n\t}, [window.location.hash])\n\n\t// Fetching data from prismic\n\tconst [doc, setDocData] = useState([]);\n\n\tuseEffect(() => {\n\t\t// Fetching projects\n\t\tconst fetchData = async () => {\n\t\t\tawait client.query(\n\t\t\t\tPrismic.Predicates.at('document.type', 'projects'),\n\t\t\t\t// Sort DocData in ascending order based on projectDate\n\t\t\t\t{ orderings: '[my.projects.projectdates desc]' }\n\t\t\t).then(function (res) {\n\t\t\t\tsetDocData((prevState) => res.results);\n\t\t\t});\n\t\t};\n\t\tfetchData();\n\n\t\t// Fetching contact link\n\t\tconst fetchContactLink = async () => {\n\t\t\tclient.query(\n\t\t\t\tPrismic.Predicates.at('document.type', 'contactlink')\n\t\t\t).then(function (res) {\n\t\t\t\tsetcontactIGLink((prevState) => res.results[0].data)\n\t\t\t});\n\t\t};\n\t\tfetchContactLink();\n\t}, [])\n\n\tconst listenScrollEvent = () => {\n\t\tconst withoutHash = window.location.hash.replaceAll(\"#\", \"\")\n\t\tsetcurrentUrl((prevState) => withoutHash.replaceAll(\"%20\", \" \"))\n\t}\n\n\treturn (\n\t\t<div className=\"home-wrapper-container\">\n\t\t\t<div className=\"home-container\">\n\n\t\t\t\t<div className=\"header\" style={{ zIndex: \"3\" }}>\n\t\t\t\t\t<Header currentUrl={currentUrl} />\n\t\t\t\t</div>\n\n\t\t\t\t{/* Mobile Nav */}\n\t\t\t\t<div className=\"mobileNav\">\n\t\t\t\t\t<div className=\"mobile-nav-items\">\n\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\tdoc && doc.map((project) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MobileNavItem project={project.data} key={project.id} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"mobile-nav-footer bg-blue\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontactIGLink &&\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<a className=\"bg-white\" style={{ flex: \"1\" }} href='mailto:hi@pedrodamasceno.com' rel=\"noreferrer\" target=\"_blank\"><h1 className=\"pointer bg-white\" style={{ color: \"#8c8c8c\", fontSize: \"16px\" }}>Contact me</h1></a>\n\t\t\t\t\t\t\t\t<a className=\"bg-white flex-col-start\" style={{ flex: \"1\", alignItems: \"flex-end\" }} rel=\"noreferrer\" href='https://www.instagram.com/pedrose/' target=\"_blank\"><h1 className=\"pointer bg-white\" style={{ color: \"#8c8c8c\", fontSize: \"16px\" }}>IG</h1></a>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* Desktop Nav */}\n\t\t\t\t<div className=\"left-nav\">\n\t\t\t\t\t<div className=\"left-nav-items\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdoc ?\n\t\t\t\t\t\t\t\tdoc.map((project) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<NavItem currentUrl={currentUrl} projectName={\"Project1\"} project={project.data} key={project.id} />\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"left-nav-footer bg-white\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontactIGLink &&\n\t\t\t\t\t\t\t\t<react.Fragment>\n\t\t\t\t\t\t\t\t\t<a className=\"bg-white\" style={{ flex: \"1\" }} href='mailto:hi@pedrodamasceno.com' rel=\"noreferrer\" target=\"_blank\"><h1 className=\"pointer bg-white contactMe\" style={{ color: \"#8c8c8c\", fontSize: \"16px\" }}>Contact me</h1></a>\n\t\t\t\t\t\t\t\t\t<a className=\"bg-white flex-end\" style={{ flex: \"1\", paddingRight: \"2.5rem\" }} rel=\"noreferrer\" href='https://www.instagram.com/pedrose/' target=\"_blank\"><h1 className=\"pointer bg-white instagram\" style={{ color: \"#8c8c8c\", fontSize: \"16px\" }}>IG</h1></a>\n\t\t\t\t\t\t\t\t</react.Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"projectsContent\" >\n\t\t\t\t\t{\n\t\t\t\t\t\tdoc ?\n\t\t\t\t\t\t\tdoc.map((project) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Project key={project.id} currentUrl={currentUrl} project={project.data} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Pages/About/About.jsx",["75"],"import React, { useEffect, useState } from \"react\";\nimport Header from \"../../Components/Header/Header\";\nimport \"./About.css\";\nimport Prismic from \"@prismicio/client\";\nimport AboutLeftNav from \"../../Components/AboutLeftNav/AboutLeftNav\";\nimport AboutContent from \"../../Components/AboutContent/AboutContent\";\nimport MobileNavItem from \"../../Components/MobileNavItem/MobileNavItem\"\n\n\nconst apiEndpoint = \"https://portfolio-pedro.cdn.prismic.io/api/v2\";\nconst accessToken =\n\t\"MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ\";\nconst client = Prismic.client(apiEndpoint, { accessToken });\n\nfunction About() {\n\tconst [currentUrl] = useState(\"/about\");\n\n\t// Fetching data from prismic\n\tconst [doc, setDocData] = useState(null);\n\tconst [aboutContent, setAboutContent] = useState(null);\n\tconst [contactIGLink, setcontactIGLink] = useState(null);\n\n\tuseEffect(() => {\n\t\t// Fetching projects\n\t\tconst fetchData = async () => {\n\t\t\tclient\n\t\t\t\t.query(Prismic.Predicates.at(\"document.type\", \"projects\"),\n\t\t\t\t\t{ orderings: '[my.projects.projectdates desc]' })\n\t\t\t\t.then(function (res) {\n\t\t\t\t\tsetDocData((prevState) => res.results);\n\t\t\t\t});\n\t\t\tclient\n\t\t\t\t.query(Prismic.Predicates.at(\"document.type\", \"about\"))\n\t\t\t\t.then(function (res) {\n\t\t\t\t\tconsole.log(res.results[0]);\n\t\t\t\t\tsetAboutContent((prevState) => res.results[0].data)\n\t\t\t\t});\n\t\t};\n\t\t// Fetching contact link\n\t\tconst fetchContactLink = async () => {\n\t\t\tclient.query(\n\t\t\t\tPrismic.Predicates.at('document.type', 'contactlink')\n\t\t\t).then(function (res) {\n\t\t\t\tsetcontactIGLink((prevState) => res.results[0].data)\n\t\t\t});\n\t\t}\n\t\tfetchContactLink()\n\t\tfetchData();\n\t}, []);\n\n\n\n\treturn (\n\t\t<div className=\"about-container-wrapper\">\n\t\t\t<div className=\"about-container\">\n\t\t\t\t<div className=\"about-header\">\n\t\t\t\t\t<Header currentUrl={currentUrl} aboutPageFlag={true} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"about-left-nav\">\n\t\t\t\t\t<div className=\"about-left-nav-items\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdoc && doc.map((project) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<AboutLeftNav\n\t\t\t\t\t\t\t\t\t\tcurrentUrl={currentUrl}\n\t\t\t\t\t\t\t\t\t\tprojectName={\"Project1\"}\n\t\t\t\t\t\t\t\t\t\tproject={project.data}\n\t\t\t\t\t\t\t\t\t\tkey={project.id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"about-left-nav-footer\">\n\t\t\t\t\t\t<a className=\"bg-white\" style={{ flex: \"1\" }} href='mailto:hi@pedrodamasceno.com' target=\"_blank\" rel=\"noreferrer\"><h1 className=\"f1-5 pointer contactz\" style={{ color: \"#8c8c8c\", fontSize: \"16px\" }}>Contact me</h1></a>\n\t\t\t\t\t\t<a className=\"bg-white flex-end\" style={{ flex: \"1\", paddingRight: \"2.5rem\" }} href='https://www.instagram.com/pedrose/' rel=\"noreferrer\" target=\"_blank\"><h1 className=\"f1-5 pointer IGz\" style={{ color: \"#8c8c8c\", fontSize: \"16px\" }}>IG</h1></a>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"about-content\">\n\t\t\t\t\t<div className=\"aboutContentDiv\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taboutContent ?\n\t\t\t\t\t\t\t\t<AboutContent aboutContent={aboutContent} />\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"aboutMobileNav\">\n\t\t\t\t\t{doc ?\n\t\t\t\t\t\tdoc.map((project) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MobileNavItem project={project.data} key={project.id} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\n\t\t\t\t\t}\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default About;\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Pages/SingleProject/SingleProject.jsx",["76"],"import React, { useEffect, useState } from 'react'\nimport ProjectPageHeader from '../../Components/ProjectPageHeader/ProjectPageHeader'\nimport './SingleProject.css'\n// import ProjectPageHeader from \"../../Components/ProjectPageHeader/ProjectPageHeader\"\nimport Prismic from '@prismicio/client'\nimport MobileProject from \"../../Components/MobileProject/MobileProject\"\n\nconst apiEndpoint = 'https://portfolio-pedro.cdn.prismic.io/api/v2'\nconst accessToken = 'MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ'\nconst client = Prismic.client(apiEndpoint, { accessToken })\n\nfunction SingleProject(props) {\n    // Fetching data from prismic\n    const [doc, setDocData] = useState(null)\n    useEffect(() => {\n        const selectedProject = props.match.params.uid\n        // Fetching projects\n        const fetchData = async () => {\n            client.query(\n                Prismic.Predicates.at('document.type', 'projects')\n            ).then(function (res) {\n                res.results.forEach(project => {\n                    if(project.data.title[0].text.toLowerCase()===selectedProject.toLowerCase())       \n                    {\n                        setDocData((prevState) => project)\n                    }             \n                });\n            });\n        }\n        fetchData()\n\n    }, [])\n\n    return (\n        <div className=\"singleproject-page-wrappper\">\n            <div className=\"singleproject-header\">\n                <ProjectPageHeader />\n            </div>\n            <div className=\"singleproject-Content\">\n                {\n                    doc && <MobileProject project={doc.data} />\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default SingleProject\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/NavItem/NavItem.jsx",["77","78"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./NavItem.css\";\nimport { Link } from 'react-scroll'\n\n// General scroll to element function\nfunction NavItem(props) {\n\tconst [itemColor, setitemColor] = useState(\"black\");\n\tconst [navDes, setnavDes] = useState(\"\");\n\tconst [projectDates, setprojectDates] = useState(\"\");\n\tconst [activeState, setactiveState] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Setting date\n\t\tvar d = new Date(props.project.timestamp);\n\t\tsetprojectDates(() => (d.getMonth() + 1) + '.' + d.getFullYear())\n\n\t\tvar localnavdes = \"\"\n\t\tfor (let i = 0; i < 120; i++) {\n\t\t\tif (props.project.navbardescription[0].text[i] === undefined)\n\t\t\t\tbreak;\n\n\t\t\tlocalnavdes += props.project.navbardescription[0].text[i]\n\t\t}\n\t\tsetnavDes(() => `${localnavdes}...`)\n\t\treturn () => { };\n\t}, [props.currentUrl]);\n\tconst handleSetActive = () => {\n\t\tsetactiveState(true)\n\t\tsetitemColor(\"blue\");\n\t}\n\tconst handleSetInactive = () => {\n\t\tsetactiveState(false)\n\t\tsetitemColor(\"black\");\n\t}\n\treturn (\n\t\t<Link to={`${props.project.title[0].text}`} smooth={true} offset={-90} hashSpy={true} spy={true} activeClass=\"active\"\n\t\t\tonSetActive={handleSetActive}\n\t\t\tonSetInactive={handleSetInactive}>\n\t\t\t<div\n\t\t\t\tclassName=\"nav-item-container-wrapper flex-col pointer\"\n\t\t\t\tstyle={{ color: `${itemColor}` }}\n\t\t\t>\n\t\t\t\t<h2 className=\"f1-5 item-heading\">\n\t\t\t\t\t<span style={{ flex: \"4\" }}>{props.project.title[0].text}</span>\n\t\t\t\t\t<span className=\"item-date flex-end\" style={{ flex: \"1\" }}>{projectDates}</span>\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"item-para\">\n\t\t\t\t\t{navDes}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nexport default withRouter(NavItem);\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/Project/Project.jsx",["79","80","81","82"],"import React, { useEffect, useState } from \"react\";\nimport ImageCarousel from \"../ImageCarousel/ImageCarousel\";\n\nimport { Date, RichText } from \"prismic-reactjs\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport \"./Project.css\";\n\nfunction Project(props) {\n\tconst [itemColor, setitemColor] = useState(\"black\");\n\tconst [projectDates, setprojectDates] = useState(\"\");\n\n\tuseEffect(() => {\n\t\t// Setting date\n\t\tvar d = new Date(props.project.timestamp);\n\t\tsetprojectDates(\n\t\t\t(prevState) => d.getMonth() + 1 + \".\" + d.getFullYear()\n\t\t);\n\t\tif (props.currentUrl === `${props.project.title[0].text}`)\n\t\t\tsetitemColor(\"blue\");\n\t\telse\n\t\t\tsetitemColor(\"black\");\n\n\t\treturn () => { };\n\t}, [props.currentUrl]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"project-container-wrapper\"\n\t\t\tid={props.project.title[0].text}\n\t\t>\n\t\t\t<div className=\"project-container\">\n\t\t\t\t<div className=\"project-container-headings f1-5\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"f1-5 flex-start project-heading fb\"\n\t\t\t\t\t\tstyle={{ color: `${itemColor}` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.project.title[0].text}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"f1-5 flex-end project-date\">\n\t\t\t\t\t\t{projectDates}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"project-container-content-div\">\n\t\t\t\t\t<div className=\"project-container-content-left\">\n\t\t\t\t\t\t<div className=\"project-container-content-left-img\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprops.project.projectimages.url === props.project.projectimages.second.url && props.project.projectimages.url === props.project.projectimages.third.url ?\n\n\t\t\t\t\t\t\t\t\t<ImageCarousel\n\t\t\t\t\t\t\t\t\t\tSize={{ width: \"550px\", height: \"440px\" }}\n\t\t\t\t\t\t\t\t\t\tprojectId={\n\t\t\t\t\t\t\t\t\t\t\tprops.project.title[0].text + \"image\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tprojectimages={props.project.projectimages}\n\t\t\t\t\t\t\t\t\t/> :\n\t\t\t\t\t\t\t\t\t<AwesomeSlider\n\t\t\t\t\t\t\t\t\t\torganicArrows={false}\n\t\t\t\t\t\t\t\t\t\tbullets={false}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img data-src={props.project.projectimages.url} />\n\t\t\t\t\t\t\t\t\t\t<img data-src={props.project.projectimages.second.url} />\n\t\t\t\t\t\t\t\t\t\t<img data-src={props.project.projectimages.third.url} />\n\t\t\t\t\t\t\t\t\t</AwesomeSlider>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"project-container-content-left-content\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Apply edited bold string, hyperlink in prismic editor to the site.\n\t\t\t\t\t\t\t\tRichText.render(props.project.description)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Project;\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/AboutContent/AboutContent.jsx",[],"/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/MobileNavItem/MobileNavItem.jsx",["83"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./MobileNavItem.css\";\n\nconst MobileNavItem = (props) => {\n    const [projectDates, setprojectDates] = useState(\"\");\n    const [navDes, setnavDes] = useState(\"\");\n  \n    useEffect(() => {\n      // Setting date\n      var d = new Date(props.project.timestamp);\n      setprojectDates(() => d.getMonth() + 1 + \".\" + d.getFullYear());\n      var localnavdes=\"\"\n      for(let i =0 ;i<120;i++)\n      {\n        if(props.project.navbardescription[0].text[i]===undefined)\n          break;\n          \n          localnavdes+=props.project.navbardescription[0].text[i]\n      }\n      setnavDes(()=>`${localnavdes}...`)\n      return () => {};\n    }, []);\n    const handleRedirection = (route) =>{\n      props.history.push(`/projects/${route}`)\n    }    \n    return (\n        <div className=\"mobile-nav-item-container-wrapper flex-col pointer\" onClick={(e)=>{handleRedirection(props.project.title[0].text)}}>\n        <h2 className=\"f1-5 mobile-item-heading\">\n          <span style={{ flex: \"5\" }}>{props.project.title[0].text}</span>\n          <span style={{ flex: \"1\" }} className=\"mobile-item-date flex-end\">{projectDates}</span>\n        </h2>\n        <p className=\"mobile-item-para\">\n        {navDes}\n        </p>\n        {/* <h2 className=\"item-date f1-5 fb\">{props.project.projectdates}</h2> */}\n      </div>\n    );\n}\n\nexport default withRouter(MobileNavItem)\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/MobileProject/MobileProject.jsx",["84","85","86","87"],"import React, { useEffect, useState } from \"react\";\nimport ImageCarousel from \"../ImageCarousel/ImageCarousel\";\n\nimport { Date, RichText } from 'prismic-reactjs'\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport \"./MobileProject.css\";\n\nfunction MobileProject(props) {\n\tconst [itemColor, setitemColor] = useState(\"black\");\n\tconst [projectDates, setprojectDates] = useState(\"\");\n\n\tuseEffect(() => {\n\t\t// Setting date\n\t\tvar d = new Date(props.project.timestamp);\n\t\tsetprojectDates((prevState) => (d.getMonth() + 1) + '.' + d.getFullYear())\n\t\tif (props.currentUrl === `/${props.project.title[0].text}`) setitemColor(\"blue\");\n\t\telse setitemColor(\"black\");\n\t}, [props.currentUrl]);\n\treturn (\n\t\t<div className=\"mobile-project-container-wrapper\">\n\t\t\t<div className=\"mobile-project-container\">\n\t\t\t\t<div className=\"mobile-project-container-headings\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"flex-start mobile-project-heading\"\n\t\t\t\t\t\tstyle={{ color: `${itemColor}` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.project.title[0].text}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"f1-5 flex-end mobile-project-date\">\n\t\t\t\t\t\t{projectDates}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mobile-project-container-content-left\">\n\t\t\t\t\t<div className=\"mobile-project-container-content-left-img\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.project.projectimages.url === props.project.projectimages.second.url && props.project.projectimages.url === props.project.projectimages.third.url ?\n\t\t\t\t\t\t\t\t<ImageCarousel Size={{ width: \"100%\", height: \"270px\" }} projectId={props.project.title[0].text} projectimages={props.project.projectimages} /> :\n\t\t\t\t\t\t\t\t<AwesomeSlider\n\t\t\t\t\t\t\t\t\torganicArrows={false}\n\t\t\t\t\t\t\t\t\tbullets={false}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img data-src={props.project.projectimages.url} />\n\t\t\t\t\t\t\t\t\t<img data-src={props.project.projectimages.second.url} />\n\t\t\t\t\t\t\t\t\t<img data-src={props.project.projectimages.third.url} />\n\t\t\t\t\t\t\t\t</AwesomeSlider>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mobile-project-container-content-left-content\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Apply edited bold string, hyperlink in prismic editor to the site.\n\t\t\t\t\t\t\tRichText.render(props.project.description)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default MobileProject;\n\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/Header/Header.jsx",["88","89","90"],"import * as Scroll from \"react-scroll\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Header.css\";\nimport { goToTop } from \"react-update-url-on-scroll\";\n// import { Link } from 'react-router-dom'\nimport { Link } from \"react-scroll\";\nimport { Link as RouteLink, withRouter}  from \"react-router-dom\";\n\nfunction Header(props) {\n  // for chaning name color \n  const mediaMatch = window.matchMedia('(max-width: 850px)');\n  const [nameColor, setnameColor] = useState(\"blue\");\n\n  const [activeState, setactiveState] = useState(false);\n\n  useEffect(() => {\n    if(window.scrollY===0)\n      setnameColor(\"blue\");\n    else\n      setnameColor(\"black\");\n  }, [window.scrollY]);\n  const handleSetActive = () =>{\n    setactiveState(true)\n    setnameColor(\"blue\");\n    // goToTop()\n  }\n  const handleSetInactive = () =>{\n    setactiveState(false)\n    setnameColor(\"black\");\n  }\n  return (\n    <div className=\"header-container-wrapper flex-col-end\" id=\"\">\n      <div className=\"header-container\">\n        <Link\n          to=\"\"\n          onSetActive={handleSetActive}\n          onSetInactive={handleSetInactive}\n          onClick={()=>{\n            goToTop();\n          }}\n        >\n          <div\n            className=\"name fb pointer\"\n            style={{ color: `${nameColor}` }}\n            onClick={() => {\n              props.history.push(\"/\");\n            }}\n          >\n            {\n              props.aboutPageFlag && mediaMatch.matches?\n              <span style={{color:\"#8c8c8c\", fontWeight:\"400\"}}>\n              <i className=\"f1-3 fas fa-arrow-left\"></i> Pedro Damasceno\n              </span>\n              :\n              props.aboutPageFlag && !mediaMatch.matches ?\n              <span style={{color:\"black\", fontWeight:\"700\"}}>\n              Pedro Damasceno\n              {/* <i className=\"f1-3 fas fa-arrow-left\"></i> Pedro Damasceno */}\n              </span>\n              :\n              <span>\n              Pedro Damasceno\n              </span>\n            }\n          </div>\n        </Link>\n        {\n          props.aboutPageFlag ?\n            props.aboutPageFlag && mediaMatch.matches ?\n            null\n            :\n            <div className=\"initiative\">Initiative</div>\n          :\n          <div className=\"initiative\">Initiative</div>\n\n        }\n        <RouteLink to=\"/about\">\n          <div className=\"about\">About</div>\n        </RouteLink>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Header);\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/AboutLeftNav/AboutLeftNav.jsx",["91"],"import React, { useEffect, useState } from \"react\";\nimport \"./AboutLeftNav.css\";\nimport {withRouter} from 'react-router-dom'\nfunction AboutLeftNav(props) {\n  const [projectDates, setprojectDates] = useState(\"\");\n  const [navDes, setnavDes] = useState(\"\");\n\n  useEffect(() => {\n    // Setting date\n    var d = new Date(props.project.timestamp);\n    setprojectDates((prevState) => d.getMonth() + 1 + \".\" + d.getFullYear());\n    var localnavdes=\"\"\n    for(let i =0 ;i<110;i++)\n    {\n      if(props.project.navbardescription[0].text[i]===undefined)\n      break;\n      \n      localnavdes+=props.project.navbardescription[0].text[i]\n    }\n    setnavDes((prevState)=>`${localnavdes}...`)\n    return () => {};\n  }, []);\n  const navigate = (projectRoute) => {\n      // props.history.push(`/`)\n      window.location.href = `/#${projectRoute}`;\n  }\n  return (\n    <div className=\"about-nav-item-container-wrapper flex-col pointer\" onClick={(e)=>{navigate(props.project.title[0].text)}}>\n      <h2 className=\"f1-5 about-item-heading\">\n        <span style={{ flex: \"5\" }}>{props.project.title[0].text}</span>\n        <span className=\"item-date flex-end\"style={{ flex: \"1\" }}>{projectDates}</span>\n      </h2>\n      <p className=\"about-item-para\">\n      {navDes}\n      </p>\n    </div>\n  );\n}\n\nexport default withRouter(AboutLeftNav);\n","/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/ProjectPageHeader/ProjectPageHeader.jsx",[],"/Users/pedrodamasceno/Downloads/pedroproject-master 2/src/Components/ImageCarousel/ImageCarousel.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":31,"column":5,"nodeType":"98","endLine":31,"endColumn":27,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":21,"column":9,"nodeType":"102","messageId":"103","endLine":21,"endColumn":22},{"ruleId":"96","severity":1,"message":"104","line":32,"column":8,"nodeType":"98","endLine":32,"endColumn":10,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"106","line":11,"column":9,"nodeType":"102","messageId":"103","endLine":11,"endColumn":20},{"ruleId":"96","severity":1,"message":"107","line":27,"column":5,"nodeType":"98","endLine":27,"endColumn":23,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"109","line":25,"column":5,"nodeType":"98","endLine":25,"endColumn":23,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":61,"column":11,"nodeType":"113","endLine":61,"endColumn":61},{"ruleId":"111","severity":1,"message":"112","line":62,"column":11,"nodeType":"113","endLine":62,"endColumn":68},{"ruleId":"111","severity":1,"message":"112","line":63,"column":11,"nodeType":"113","endLine":63,"endColumn":67},{"ruleId":"96","severity":1,"message":"107","line":23,"column":8,"nodeType":"98","endLine":23,"endColumn":10,"suggestions":"114"},{"ruleId":"96","severity":1,"message":"109","line":19,"column":5,"nodeType":"98","endLine":19,"endColumn":23,"suggestions":"115"},{"ruleId":"111","severity":1,"message":"112","line":43,"column":10,"nodeType":"113","endLine":43,"endColumn":60},{"ruleId":"111","severity":1,"message":"112","line":44,"column":10,"nodeType":"113","endLine":44,"endColumn":67},{"ruleId":"111","severity":1,"message":"112","line":45,"column":10,"nodeType":"113","endLine":45,"endColumn":66},{"ruleId":"100","severity":1,"message":"116","line":1,"column":13,"nodeType":"102","messageId":"103","endLine":1,"endColumn":19},{"ruleId":"100","severity":1,"message":"106","line":14,"column":10,"nodeType":"102","messageId":"103","endLine":14,"endColumn":21},{"ruleId":"96","severity":1,"message":"117","line":21,"column":6,"nodeType":"98","endLine":21,"endColumn":22,"suggestions":"118"},{"ruleId":"96","severity":1,"message":"107","line":22,"column":6,"nodeType":"98","endLine":22,"endColumn":8,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location.hash'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.hash' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["122"],"no-unused-vars","'contactIGLink' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.uid'. Either include it or remove the dependency array.",["123"],"'activeState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.project.navbardescription' and 'props.project.timestamp'. Either include them or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'props.project.timestamp' and 'props.project.title'. Either include them or remove the dependency array.",["125"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["126"],["127"],"'Scroll' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'window.scrollY'. Either exclude it or remove the dependency array. Outer scope values like 'window.scrollY' aren't valid dependencies because mutating them doesn't re-render the component.",["128"],["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"136","fix":"140"},{"desc":"130","fix":"141"},{"desc":"138","fix":"142"},"Update the dependencies array to be: []",{"range":"143","text":"144"},"Update the dependencies array to be: [props.match.params.uid]",{"range":"145","text":"146"},"Update the dependencies array to be: [props.currentUrl, props.project.navbardescription, props.project.timestamp]",{"range":"147","text":"148"},"Update the dependencies array to be: [props.currentUrl, props.project.timestamp, props.project.title]",{"range":"149","text":"150"},"Update the dependencies array to be: [props.project.navbardescription, props.project.timestamp]",{"range":"151","text":"152"},{"range":"153","text":"150"},{"range":"154","text":"144"},{"range":"155","text":"152"},[1041,1063],"[]",[1372,1374],"[props.match.params.uid]",[846,864],"[props.currentUrl, props.project.navbardescription, props.project.timestamp]",[730,748],"[props.currentUrl, props.project.timestamp, props.project.title]",[740,742],"[props.project.navbardescription, props.project.timestamp]",[709,727],[663,679],[707,709]]